name: Tests on CI

on:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  cpu:
    name: Tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: "${{ matrix.python-version }}"
      - uses: actions/setup-go@v5
        with:
          go-version: '>=1.17.0'
      # Add Go bin directory to PATH for this workflow
      # GITHUB_PATH is a special file that GitHub Actions uses to modify PATH
      # Writing to this file adds the directory to the PATH for subsequent steps
      - name: Install gopls
        shell: bash
        run: go install golang.org/x/tools/gopls@latest
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.18.4'
          otp-version: '26.1'
      - name: Install Next LS
        run: |
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            NEXT_LS_URL="https://github.com/elixir-tools/next-ls/releases/download/v0.23.3/next_ls_linux_amd64"
            curl -fLo next-ls "$NEXT_LS_URL"
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            NEXT_LS_URL="https://github.com/elixir-tools/next-ls/releases/download/v0.23.3/next_ls_darwin_amd64"
            curl -fLo next-ls "$NEXT_LS_URL"
          elif [[ "$RUNNER_OS" == "Windows" ]]; then
            NEXT_LS_URL="https://github.com/elixir-tools/next-ls/releases/download/v0.23.3/next_ls_windows_amd64.exe"
            curl -fLo next-ls.exe "$NEXT_LS_URL"
          fi
          chmod +x next-ls* || true
          # Add to PATH for the current step and future steps
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            echo "$PWD" >> $GITHUB_PATH
          else
            echo "$PWD" >> $GITHUB_PATH
          fi
      - name: Prepare java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@13.4
        with:
          cli: latest
      - name: Install uv
        shell: bash
        run: curl -LsSf https://astral.sh/uv/install.sh | sh
      - name: Cache uv virtualenv
        id: cache-uv
        uses: actions/cache@v3
        with:
          path: .venv
          key: uv-venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('uv.lock') }}
      - name: Create virtual environment
        shell: bash
        run: |
          if [ ! -d ".venv" ]; then
            uv venv
          fi
      - name: Install dependencies
        shell: bash
        run: uv pip install -e ".[dev]"
      - name: Test with pytest
        shell: bash
        run: uv run poe test
